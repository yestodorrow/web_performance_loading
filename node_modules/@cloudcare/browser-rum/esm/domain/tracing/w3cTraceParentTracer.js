import { TraceIdentifier, getCrypto } from './traceIdentifier';
import { assign } from '@cloudcare/browser-core';

// === Generate a random 64-bit number in fixed-length hex format
function randomTraceId() {
  var digits = '0123456789abcdef';
  var n = '';
  for (var i = 0; i < 16; i += 1) {
    var rand = Math.floor(Math.random() * 16);
    n += digits[rand];
  }
  return n;
}
/**
 *
 * @param {*} traceSampled
 * @param {*} isHexTraceId 是否需要转换成10进制上报数据
 */
export function W3cTraceParentTracer(traceSampled, isHexTraceId) {
  this._traceId = new TraceIdentifier();
  this._spanId = new TraceIdentifier();
  this._traceSampled = traceSampled;
  this.isHexTraceId = isHexTraceId;
}
W3cTraceParentTracer.prototype = {
  isTracingSupported: function isTracingSupported() {
    return getCrypto() !== undefined;
  },
  getSpanId: function getSpanId() {
    return this.isHexTraceId ? this._spanId.toDecimalString() : this._spanId.toPaddedHexadecimalString();
  },
  getTraceId: function getTraceId() {
    if (this.isHexTraceId) {
      // 转化为二进制之后上报
      return this._traceId.toDecimalString();
    } else {
      return this._traceId.toPaddedHexadecimalString() + this._spanId.toPaddedHexadecimalString();
    }
  },
  getTraceParent: function getTraceParent() {
    // '{version}-{traceId}-{spanId}-{sampleDecision}'
    if (this.isHexTraceId) {
      // 短64位，前面补0
      return '00-0000000000000000' + this._traceId.toPaddedHexadecimalString() + '-' + this._spanId.toPaddedHexadecimalString() + '-' + (this._traceSampled ? '01' : '00');
    } else {
      return '00-' + this.getTraceId() + '-' + this.getSpanId() + '-' + (this._traceSampled ? '01' : '00');
    }
  },
  makeTracingHeaders: function makeTracingHeaders() {
    var baseHeaders = {
      traceparent: this.getTraceParent()
    };
    if (this.isHexTraceId) {
      return assign(baseHeaders, {
        'x-gc-trace-id': this.getTraceId(),
        'x-gc-span-id': this.getSpanId()
      });
    }
    return baseHeaders;
  }
};
//# sourceMappingURL=w3cTraceParentTracer.js.map