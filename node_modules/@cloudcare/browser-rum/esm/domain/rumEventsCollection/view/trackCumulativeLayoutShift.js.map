{"version":3,"file":"trackCumulativeLayoutShift.js","names":["find","noop","round","ONE_SECOND","LifeCycleEventType","isElementNode","supportPerformanceTimingEvent","getSelectorFromElement","trackCumulativeLayoutShift","lifeCycle","configuration","callback","isLayoutShiftSupported","stop","maxClsValue","value","window","slidingSessionWindow","_subscribe","subscribe","PERFORMANCE_ENTRIES_COLLECTED","entries","i","length","entry","entryType","hadRecentInput","update","cls","clsTarget","largestLayoutShiftTarget","cslTargetSelector","isConnected","actionNameAttribute","targetSelector","unsubscribe","startTime","endTime","largestLayoutShift","largestLayoutShiftTime","shouldCreateNewWindow","undefined","sources","findTarget","s","node"],"sources":["../../../../src/domain/rumEventsCollection/view/trackCumulativeLayoutShift.js"],"sourcesContent":["import {\n  find,\n  noop,\n  round,\n  ONE_SECOND,\n  LifeCycleEventType,\n  isElementNode\n} from '@cloudcare/browser-core'\nimport { supportPerformanceTimingEvent } from '../../performanceCollection'\nimport { getSelectorFromElement } from '../actions/getSelectorsFromElement'\n\n/**\n * Track the cumulative layout shifts (CLS).\n * Layout shifts are grouped into session windows.\n * The minimum gap between session windows is 1 second.\n * The maximum duration of a session window is 5 second.\n * The session window layout shift value is the sum of layout shifts inside it.\n * The CLS value is the max of session windows values.\n *\n * This yields a new value whenever the CLS value is updated (a higher session window value is computed).\n *\n * See isLayoutShiftSupported to check for browser support.\n *\n * Documentation:\n * https://web.dev/cls/\n * https://web.dev/evolving-cls/\n * Reference implementation: https://github.com/GoogleChrome/web-vitals/blob/master/src/getCLS.ts\n */\nexport function trackCumulativeLayoutShift(lifeCycle, configuration, callback) {\n  if (!isLayoutShiftSupported()) {\n    return {\n      stop: noop\n    }\n  }\n  var maxClsValue = 0\n  callback({\n    value: 0\n  })\n  var window = slidingSessionWindow()\n  var _subscribe = lifeCycle.subscribe(\n    LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED,\n    function (entries) {\n      for (var i = 0; i < entries.length; i++) {\n        var entry = entries[i]\n        if (entry.entryType === 'layout-shift' && !entry.hadRecentInput) {\n          window.update(entry)\n          if (window.value() > maxClsValue) {\n            maxClsValue = window.value()\n            var cls = round(maxClsValue, 4)\n            var clsTarget = window.largestLayoutShiftTarget()\n            var cslTargetSelector\n            if (\n              clsTarget &&\n              // 检测目标是否在dom 中被删除\n              clsTarget.isConnected\n            ) {\n              cslTargetSelector = getSelectorFromElement(\n                clsTarget,\n                configuration.actionNameAttribute\n              )\n            }\n            callback({\n              value: cls,\n              targetSelector: cslTargetSelector\n            })\n          }\n        }\n      }\n    }\n  )\n  var stop = _subscribe.unsubscribe\n  return {\n    stop: stop\n  }\n}\n\nfunction slidingSessionWindow() {\n  var value = 0\n  var startTime\n  var endTime\n  var largestLayoutShift = 0\n  var largestLayoutShiftTarget\n  var largestLayoutShiftTime\n  return {\n    update: function (entry) {\n      var shouldCreateNewWindow =\n        startTime === undefined ||\n        entry.startTime - endTime >= ONE_SECOND ||\n        entry.startTime - startTime >= 5 * ONE_SECOND\n      if (shouldCreateNewWindow) {\n        startTime = endTime = entry.startTime\n        value = entry.value\n        largestLayoutShift = 0\n        largestLayoutShiftTarget = undefined\n      } else {\n        value += entry.value\n        endTime = entry.startTime\n      }\n\n      if (entry.value > largestLayoutShift) {\n        largestLayoutShift = entry.value\n        largestLayoutShiftTime = entry.startTime\n\n        if (entry.sources && entry.sources.length) {\n          var findTarget = find(entry.sources, function (s) {\n            return !!s.node && isElementNode(s.node)\n          })\n          if (findTarget) {\n            largestLayoutShiftTarget = findTarget.node\n          }\n        } else {\n          largestLayoutShiftTarget = undefined\n        }\n      }\n    },\n    value: function () {\n      return value\n    },\n    largestLayoutShiftTarget: function () {\n      return largestLayoutShiftTarget\n    },\n    largestLayoutShiftTime: function () {\n      return largestLayoutShiftTime\n    }\n  }\n}\n\n/**\n * Check whether `layout-shift` is supported by the browser.\n */\nexport function isLayoutShiftSupported() {\n  return supportPerformanceTimingEvent('layout-shift')\n}\n"],"mappings":"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","ignoreList":[]}