"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.trackFirstInput = trackFirstInput;
var _browserCore = require("@cloudcare/browser-core");
var _getSelectorsFromElement = require("../actions/getSelectorsFromElement");
/**
 * Track the first input occurring during the initial View to return:
 * - First Input Delay
 * - First Input Time
 * Callback is called at most one time.
 * Documentation: https://web.dev/fid/
 * Reference implementation: https://github.com/GoogleChrome/web-vitals/blob/master/src/getFID.ts
 */
function trackFirstInput(lifeCycle, configuration, firstHidden, callback) {
  var subscribe = lifeCycle.subscribe(_browserCore.LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED, function (entries) {
    var firstInputEntry = (0, _browserCore.find)(entries, function (entry) {
      return entry.entryType === 'first-input' && entry.startTime < firstHidden.geTimeStamp();
    });
    if (firstInputEntry) {
      var firstInputDelay = (0, _browserCore.elapsed)(firstInputEntry.startTime, firstInputEntry.processingStart);
      var firstInputTargetSelector;
      if (firstInputEntry.target && (0, _browserCore.isElementNode)(firstInputEntry.target)) {
        firstInputTargetSelector = (0, _getSelectorsFromElement.getSelectorFromElement)(firstInputEntry.target, configuration.actionNameAttribute);
      }
      callback({
        // Ensure firstInputDelay to be positive, see
        // https://bugs.chromium.org/p/chromium/issues/detail?id=1185815
        delay: firstInputDelay >= 0 ? firstInputDelay : 0,
        time: firstInputEntry.startTime,
        targetSelector: firstInputTargetSelector
      });
    }
  });
  return {
    stop: subscribe.unsubscribe
  };
}
//# sourceMappingURL=trackFirstInput.js.map