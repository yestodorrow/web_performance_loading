{"version":3,"file":"trackCumulativeLayoutShift.js","names":["_browserCore","require","_performanceCollection","_getSelectorsFromElement","trackCumulativeLayoutShift","lifeCycle","configuration","callback","isLayoutShiftSupported","stop","noop","maxClsValue","value","window","slidingSessionWindow","_subscribe","subscribe","LifeCycleEventType","PERFORMANCE_ENTRIES_COLLECTED","entries","i","length","entry","entryType","hadRecentInput","update","cls","round","clsTarget","largestLayoutShiftTarget","cslTargetSelector","isConnected","getSelectorFromElement","actionNameAttribute","targetSelector","unsubscribe","startTime","endTime","largestLayoutShift","largestLayoutShiftTime","shouldCreateNewWindow","undefined","ONE_SECOND","sources","findTarget","find","s","node","isElementNode","supportPerformanceTimingEvent"],"sources":["../../../../src/domain/rumEventsCollection/view/trackCumulativeLayoutShift.js"],"sourcesContent":["import {\n  find,\n  noop,\n  round,\n  ONE_SECOND,\n  LifeCycleEventType,\n  isElementNode\n} from '@cloudcare/browser-core'\nimport { supportPerformanceTimingEvent } from '../../performanceCollection'\nimport { getSelectorFromElement } from '../actions/getSelectorsFromElement'\n\n/**\n * Track the cumulative layout shifts (CLS).\n * Layout shifts are grouped into session windows.\n * The minimum gap between session windows is 1 second.\n * The maximum duration of a session window is 5 second.\n * The session window layout shift value is the sum of layout shifts inside it.\n * The CLS value is the max of session windows values.\n *\n * This yields a new value whenever the CLS value is updated (a higher session window value is computed).\n *\n * See isLayoutShiftSupported to check for browser support.\n *\n * Documentation:\n * https://web.dev/cls/\n * https://web.dev/evolving-cls/\n * Reference implementation: https://github.com/GoogleChrome/web-vitals/blob/master/src/getCLS.ts\n */\nexport function trackCumulativeLayoutShift(lifeCycle, configuration, callback) {\n  if (!isLayoutShiftSupported()) {\n    return {\n      stop: noop\n    }\n  }\n  var maxClsValue = 0\n  callback({\n    value: 0\n  })\n  var window = slidingSessionWindow()\n  var _subscribe = lifeCycle.subscribe(\n    LifeCycleEventType.PERFORMANCE_ENTRIES_COLLECTED,\n    function (entries) {\n      for (var i = 0; i < entries.length; i++) {\n        var entry = entries[i]\n        if (entry.entryType === 'layout-shift' && !entry.hadRecentInput) {\n          window.update(entry)\n          if (window.value() > maxClsValue) {\n            maxClsValue = window.value()\n            var cls = round(maxClsValue, 4)\n            var clsTarget = window.largestLayoutShiftTarget()\n            var cslTargetSelector\n            if (\n              clsTarget &&\n              // 检测目标是否在dom 中被删除\n              clsTarget.isConnected\n            ) {\n              cslTargetSelector = getSelectorFromElement(\n                clsTarget,\n                configuration.actionNameAttribute\n              )\n            }\n            callback({\n              value: cls,\n              targetSelector: cslTargetSelector\n            })\n          }\n        }\n      }\n    }\n  )\n  var stop = _subscribe.unsubscribe\n  return {\n    stop: stop\n  }\n}\n\nfunction slidingSessionWindow() {\n  var value = 0\n  var startTime\n  var endTime\n  var largestLayoutShift = 0\n  var largestLayoutShiftTarget\n  var largestLayoutShiftTime\n  return {\n    update: function (entry) {\n      var shouldCreateNewWindow =\n        startTime === undefined ||\n        entry.startTime - endTime >= ONE_SECOND ||\n        entry.startTime - startTime >= 5 * ONE_SECOND\n      if (shouldCreateNewWindow) {\n        startTime = endTime = entry.startTime\n        value = entry.value\n        largestLayoutShift = 0\n        largestLayoutShiftTarget = undefined\n      } else {\n        value += entry.value\n        endTime = entry.startTime\n      }\n\n      if (entry.value > largestLayoutShift) {\n        largestLayoutShift = entry.value\n        largestLayoutShiftTime = entry.startTime\n\n        if (entry.sources && entry.sources.length) {\n          var findTarget = find(entry.sources, function (s) {\n            return !!s.node && isElementNode(s.node)\n          })\n          if (findTarget) {\n            largestLayoutShiftTarget = findTarget.node\n          }\n        } else {\n          largestLayoutShiftTarget = undefined\n        }\n      }\n    },\n    value: function () {\n      return value\n    },\n    largestLayoutShiftTarget: function () {\n      return largestLayoutShiftTarget\n    },\n    largestLayoutShiftTime: function () {\n      return largestLayoutShiftTime\n    }\n  }\n}\n\n/**\n * Check whether `layout-shift` is supported by the browser.\n */\nexport function isLayoutShiftSupported() {\n  return supportPerformanceTimingEvent('layout-shift')\n}\n"],"mappings":"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","ignoreList":[]}