{"version":3,"file":"trackViewEventCounts.js","names":["_browserCore","require","_trackEventCounts2","KEEP_TRACKING_EVENT_COUNTS_AFTER_VIEW_DELAY","ONE_MINUTE","exports","trackViewEventCounts","lifeCycle","viewId","onChange","_trackEventCounts","trackEventCounts","isChildEvent","event","view","id","scheduleStop","setTimeout","stop","eventCounts"],"sources":["../../../../src/domain/rumEventsCollection/view/trackViewEventCounts.js"],"sourcesContent":["import { ONE_MINUTE, setTimeout } from '@cloudcare/browser-core'\nimport { trackEventCounts } from '../../trackEventCounts'\n\n// Some events are not being counted as they transcend views. To reduce the occurrence;\n// an arbitrary delay is added for stopping event counting after the view ends.\n//\n// Ideally, we would not stop and keep counting events until the end of the session.\n// But this might have a small performance impact if there are many many views:\n// we would need to go through each event to see if the related view matches.\n// So let's have a fairly short delay to avoid impacting performances too much.\n//\n// In the future, we could have views stored in a data structure similar to ContextHistory. Whenever\n// a child event is collected, we could look into this history to find the matching view and\n// increase the associated and increase its counter. Having a centralized data structure for it\n// would allow us to look for views more efficiently.\n//\n// For now, having a small cleanup delay will already improve the situation in most cases.\n\nexport var KEEP_TRACKING_EVENT_COUNTS_AFTER_VIEW_DELAY = 5 * ONE_MINUTE\n\nexport function trackViewEventCounts(lifeCycle, viewId, onChange) {\n  var _trackEventCounts = trackEventCounts({\n    lifeCycle: lifeCycle,\n    isChildEvent: function (event) {\n      return event.view.id === viewId\n    },\n    onChange: onChange\n  })\n  return {\n    scheduleStop: function () {\n      setTimeout(\n        _trackEventCounts.stop,\n        KEEP_TRACKING_EVENT_COUNTS_AFTER_VIEW_DELAY\n      )\n    },\n    eventCounts: _trackEventCounts.eventCounts\n  }\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,kBAAA,GAAAD,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,IAAIE,2CAA2C,GAAG,CAAC,GAAGC,uBAAU;AAAAC,OAAA,CAAAF,2CAAA,GAAAA,2CAAA;AAEhE,SAASG,oBAAoBA,CAACC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAE;EAChE,IAAIC,iBAAiB,GAAG,IAAAC,mCAAgB,EAAC;IACvCJ,SAAS,EAAEA,SAAS;IACpBK,YAAY,EAAE,SAAAA,aAAUC,KAAK,EAAE;MAC7B,OAAOA,KAAK,CAACC,IAAI,CAACC,EAAE,KAAKP,MAAM;IACjC,CAAC;IACDC,QAAQ,EAAEA;EACZ,CAAC,CAAC;EACF,OAAO;IACLO,YAAY,EAAE,SAAAA,aAAA,EAAY;MACxB,IAAAC,uBAAU,EACRP,iBAAiB,CAACQ,IAAI,EACtBf,2CACF,CAAC;IACH,CAAC;IACDgB,WAAW,EAAET,iBAAiB,CAACS;EACjC,CAAC;AACH","ignoreList":[]}