"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.trackCommonViewMetrics = trackCommonViewMetrics;
var _trackScrollMetrics2 = require("./trackScrollMetrics");
var _trackLoadingTime2 = require("./trackLoadingTime");
var _trackCumulativeLayoutShift2 = require("./trackCumulativeLayoutShift");
var _trackInteractionToNextPaint2 = require("./trackInteractionToNextPaint");
function trackCommonViewMetrics(lifeCycle, domMutationObservable, configuration, scheduleViewUpdate, loadingType, viewStart) {
  var commonViewMetrics = {};
  var _trackLoadingTime = (0, _trackLoadingTime2.trackLoadingTime)(lifeCycle, domMutationObservable, configuration, loadingType, viewStart, function (newLoadingTime) {
    commonViewMetrics.loadingTime = newLoadingTime;
    scheduleViewUpdate();
  });
  var stopLoadingTimeTracking = _trackLoadingTime.stop;
  var setLoadEvent = _trackLoadingTime.setLoadEvent;
  var _trackScrollMetrics = (0, _trackScrollMetrics2.trackScrollMetrics)(configuration, viewStart, function (newScrollMetrics) {
    commonViewMetrics.scroll = newScrollMetrics;
  });
  var stopScrollMetricsTracking = _trackScrollMetrics.stop;
  var stopCLSTracking;
  var _trackCumulativeLayoutShift = (0, _trackCumulativeLayoutShift2.trackCumulativeLayoutShift)(lifeCycle, configuration, function (cumulativeLayoutShift) {
    commonViewMetrics.cumulativeLayoutShift = cumulativeLayoutShift;
    scheduleViewUpdate();
  });
  var stopCLSTracking = _trackCumulativeLayoutShift.stop;
  var _trackInteractionToNextPaint = (0, _trackInteractionToNextPaint2.trackInteractionToNextPaint)(configuration, viewStart.relative, loadingType, lifeCycle);
  var stopINPTracking = _trackInteractionToNextPaint.stop;
  var getInteractionToNextPaint = _trackInteractionToNextPaint.getInteractionToNextPaint;
  var setViewEnd = _trackInteractionToNextPaint.setViewEnd;
  return {
    stop: function stop() {
      stopLoadingTimeTracking();
      stopCLSTracking();
      stopScrollMetricsTracking();
    },
    stopINPTracking: stopINPTracking,
    setLoadEvent: setLoadEvent,
    setViewEnd: setViewEnd,
    getCommonViewMetrics: function getCommonViewMetrics() {
      commonViewMetrics.interactionToNextPaint = getInteractionToNextPaint();
      return commonViewMetrics;
    }
  };
}
//# sourceMappingURL=trackCommonViewMetrics.js.map