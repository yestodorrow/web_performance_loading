"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buildReplayPayload = buildReplayPayload;
exports.toFormEntries = toFormEntries;
var _browserCore = require("@cloudcare/browser-core");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function buildReplayPayload(data, metadata, rawSegmentBytesCount) {
  var formData = new FormData();
  formData.append('segment', new Blob([data], {
    type: 'application/octet-stream'
  }), metadata.session.id + '-' + metadata.start);
  toFormEntries(metadata, function (key, value) {
    formData.append(key, value);
  });
  formData.append('raw_segment_size', rawSegmentBytesCount);
  return {
    data: formData,
    bytesCount: data.byteLength
  };
}
function toFormEntries(input, onEntry, prefix) {
  if (prefix === undefined) {
    prefix = '';
  }
  (0, _browserCore.each)((0, _browserCore.objectEntries)(input), function (item) {
    var value = item[1];
    var key = item[0];
    if (_typeof(value) === 'object' && value !== null) {
      toFormEntries(value, onEntry, '' + prefix + key + '_');
    } else {
      onEntry('' + prefix + key, String(value));
    }
  });
}
//# sourceMappingURL=buildReplayPayload.js.map