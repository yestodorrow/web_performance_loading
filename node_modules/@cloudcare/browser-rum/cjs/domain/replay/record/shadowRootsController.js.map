{"version":3,"file":"shadowRootsController.js","names":["_mutationObserver","require","_observers","initShadowRootsController","configuration","data","mutationCb","inputCb","controllerByShadowRoot","Map","shadowRootsController","addShadowRoot","shadowRoot","has","_startMutaionObserve","startMutationObserver","flush","stopMutationObserver","stop","stopInputObserver","initInputObserver","defaultPrivacyLevel","set","removeShadowRoot","entry","get","forEach","event","exports"],"sources":["../../../../src/domain/replay/record/shadowRootsController.js"],"sourcesContent":["import { startMutationObserver } from './mutationObserver'\nimport { initInputObserver } from './observers'\n\nexport var initShadowRootsController = function (configuration, data) {\n  var mutationCb = data.mutationCb\n  var inputCb = data.inputCb\n  var controllerByShadowRoot = new Map()\n\n  var shadowRootsController = {\n    addShadowRoot: function (shadowRoot) {\n      if (controllerByShadowRoot.has(shadowRoot)) {\n        return\n      }\n      var _startMutaionObserve = startMutationObserver(\n        mutationCb,\n        configuration,\n        shadowRootsController,\n        shadowRoot\n      )\n      var flush = _startMutaionObserve.flush\n      var stopMutationObserver = _startMutaionObserve.stop\n\n      // the change event no do bubble up across the shadow root, we have to listen on the shadow root\n      var stopInputObserver = initInputObserver(\n        inputCb,\n        configuration.defaultPrivacyLevel,\n        shadowRoot\n      )\n      controllerByShadowRoot.set(shadowRoot, {\n        flush: flush,\n        stop: function () {\n          stopMutationObserver()\n          stopInputObserver()\n        }\n      })\n    },\n    removeShadowRoot: function (shadowRoot) {\n      var entry = controllerByShadowRoot.get(shadowRoot)\n      if (!entry) {\n        return\n      }\n      entry.stop()\n      controllerByShadowRoot.delete(shadowRoot)\n    },\n    stop: function () {\n      controllerByShadowRoot.forEach(function (event) {\n        event.stop()\n      })\n    },\n    flush: function () {\n      controllerByShadowRoot.forEach(function (event) {\n        event.flush()\n      })\n    }\n  }\n  return shadowRootsController\n}\n"],"mappings":";;;;;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AAEO,IAAIE,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAaC,aAAa,EAAEC,IAAI,EAAE;EACpE,IAAIC,UAAU,GAAGD,IAAI,CAACC,UAAU;EAChC,IAAIC,OAAO,GAAGF,IAAI,CAACE,OAAO;EAC1B,IAAIC,sBAAsB,GAAG,IAAIC,GAAG,CAAC,CAAC;EAEtC,IAAIC,qBAAqB,GAAG;IAC1BC,aAAa,EAAE,SAAAA,cAAUC,UAAU,EAAE;MACnC,IAAIJ,sBAAsB,CAACK,GAAG,CAACD,UAAU,CAAC,EAAE;QAC1C;MACF;MACA,IAAIE,oBAAoB,GAAG,IAAAC,uCAAqB,EAC9CT,UAAU,EACVF,aAAa,EACbM,qBAAqB,EACrBE,UACF,CAAC;MACD,IAAII,KAAK,GAAGF,oBAAoB,CAACE,KAAK;MACtC,IAAIC,oBAAoB,GAAGH,oBAAoB,CAACI,IAAI;;MAEpD;MACA,IAAIC,iBAAiB,GAAG,IAAAC,4BAAiB,EACvCb,OAAO,EACPH,aAAa,CAACiB,mBAAmB,EACjCT,UACF,CAAC;MACDJ,sBAAsB,CAACc,GAAG,CAACV,UAAU,EAAE;QACrCI,KAAK,EAAEA,KAAK;QACZE,IAAI,EAAE,SAAAA,KAAA,EAAY;UAChBD,oBAAoB,CAAC,CAAC;UACtBE,iBAAiB,CAAC,CAAC;QACrB;MACF,CAAC,CAAC;IACJ,CAAC;IACDI,gBAAgB,EAAE,SAAAA,iBAAUX,UAAU,EAAE;MACtC,IAAIY,KAAK,GAAGhB,sBAAsB,CAACiB,GAAG,CAACb,UAAU,CAAC;MAClD,IAAI,CAACY,KAAK,EAAE;QACV;MACF;MACAA,KAAK,CAACN,IAAI,CAAC,CAAC;MACZV,sBAAsB,UAAO,CAACI,UAAU,CAAC;IAC3C,CAAC;IACDM,IAAI,EAAE,SAAAA,KAAA,EAAY;MAChBV,sBAAsB,CAACkB,OAAO,CAAC,UAAUC,KAAK,EAAE;QAC9CA,KAAK,CAACT,IAAI,CAAC,CAAC;MACd,CAAC,CAAC;IACJ,CAAC;IACDF,KAAK,EAAE,SAAAA,MAAA,EAAY;MACjBR,sBAAsB,CAACkB,OAAO,CAAC,UAAUC,KAAK,EAAE;QAC9CA,KAAK,CAACX,KAAK,CAAC,CAAC;MACf,CAAC,CAAC;IACJ;EACF,CAAC;EACD,OAAON,qBAAqB;AAC9B,CAAC;AAAAkB,OAAA,CAAAzB,yBAAA,GAAAA,yBAAA","ignoreList":[]}