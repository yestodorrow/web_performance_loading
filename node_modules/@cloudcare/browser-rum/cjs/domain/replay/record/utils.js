"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.assembleIncrementalSnapshot = assembleIncrementalSnapshot;
exports.forEach = forEach;
exports.getPathToNestedCSSRule = getPathToNestedCSSRule;
exports.isTouchEvent = isTouchEvent;
var _browserCore = require("@cloudcare/browser-core");
var _types = require("../../../types");
function isTouchEvent(event) {
  return Boolean(event.changedTouches);
}
function forEach(list, callback) {
  Array.prototype.forEach.call(list, callback);
}
function assembleIncrementalSnapshot(source, data) {
  return {
    data: (0, _browserCore.assign)({
      source: source
    }, data),
    type: _types.RecordType.IncrementalSnapshot,
    timestamp: (0, _browserCore.timeStampNow)()
  };
}
function getPathToNestedCSSRule(rule) {
  var path = [];
  var currentRule = rule;
  while (currentRule.parentRule) {
    var rules = Array.from(currentRule.parentRule.cssRules);
    var index = rules.indexOf(currentRule);
    path.unshift(index);
    currentRule = currentRule.parentRule;
  }
  // A rule may not be attached to a stylesheet
  if (!currentRule.parentStyleSheet) {
    return;
  }
  var rules = Array.from(currentRule.parentStyleSheet.cssRules);
  var index = rules.indexOf(currentRule);
  path.unshift(index);
  return path;
}
//# sourceMappingURL=utils.js.map