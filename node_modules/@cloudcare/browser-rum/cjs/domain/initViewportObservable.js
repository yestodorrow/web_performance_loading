"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createViewportObservable = createViewportObservable;
exports.getViewportDimension = getViewportDimension;
exports.initViewportObservable = initViewportObservable;
var _browserCore = require("@cloudcare/browser-core");
var viewportObservable;
function initViewportObservable() {
  if (!viewportObservable) {
    viewportObservable = createViewportObservable();
  }
  return viewportObservable;
}
function createViewportObservable() {
  return new _browserCore.Observable(function (observable) {
    var _throttledUpdateDimension = (0, _browserCore.throttle)(function () {
      observable.notify(getViewportDimension());
    }, 200);
    var updateDimension = _throttledUpdateDimension.throttled;
    return (0, _browserCore.addEventListener)(window, _browserCore.DOM_EVENT.RESIZE, updateDimension, {
      capture: true,
      passive: true
    }).stop;
  });
}

// excludes the width and height of any rendered classic scrollbar that is fixed to the visual viewport
function getViewportDimension() {
  var visual = window.visualViewport;
  if (visual) {
    return {
      width: Number(visual.width * visual.scale),
      height: Number(visual.height * visual.scale)
    };
  }
  return {
    width: Number(window.innerWidth || 0),
    height: Number(window.innerHeight || 0)
  };
}
//# sourceMappingURL=initViewportObservable.js.map