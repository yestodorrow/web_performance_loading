{"version":3,"file":"rumPublicApi.js","names":["_browserCore","require","_configuration","_commonContext","_typeof","obj","Symbol","iterator","constructor","prototype","RUM_STORAGE_KEY","makeRumPublicApi","startRumImpl","recorderApi","isAlreadyInitialized","globalContextManager","createContextManager","CustomerDataType","GlobalContext","userContextManager","User","getInternalContextStrategy","undefined","getInitConfigurationStrategy","stopSessionStrategy","noop","bufferApiCalls","BoundedBuffer","addTimingStrategy","name","time","timeStampNow","add","startViewStrategy","options","startClocks","clocksNow","addActionStrategy","action","commonContext","buildCommonContext","addErrorStrategy","providedError","initRum","initConfiguration","deepClone","eventBridgeAvailable","canUseEventBridge","overrideInitConfigurationForBridge","canHandleSession","canInitRum","configuration","validateAndBuildRumConfiguration","trackViewsManually","doStartRum","beforeInitCalls","_startViewStrategy","drain","initialViewOptions","storeContextsToLocal","beforeInitGlobalContext","getContext","createStoredContextManager","setContext","extend2Lev","beforeInitUserContext","startRumResults","startView","addAction","addError","addTiming","getInternalContext","stopSession","onRumStart","lifeCycle","session","viewContexts","monitor","sanitizedOptions","rumPublicApi","makePublicApi","init","addRumGlobalContext","key","value","setGlobalContextProperty","setContextProperty","removeRumGlobalContext","remove","removeGlobalContextProperty","removeContextProperty","getRumGlobalContext","get","getGlobalContext","setRumGlobalContext","context","set","setGlobalContext","clearGlobalContext","clearContext","getInitConfiguration","startTime","addDebugSession","id","clearDebugSession","getDebugSession","type","ActionType","CUSTOM","error","handlingStack","createHandlingStack","setUser","newUser","checkUser","sanitizeUser","getUser","setUserProperty","property","sanitizedProperty","removeUserProperty","removeUser","clearUser","startSessionReplayRecording","start","stopSessionReplayRecording","stop","areCookiesAuthorized","buildCookieOptions","display","warn","isLocalFile","silentMultipleInit","window","location","protocol","assign","applicationId","sessionSampleRate"],"sources":["../../src/boot/rumPublicApi.js"],"sourcesContent":["import {\n  makePublicApi,\n  areCookiesAuthorized,\n  BoundedBuffer,\n  display,\n  buildCookieOptions,\n  createContextManager,\n  CustomerDataType,\n  clocksNow,\n  timeStampNow,\n  ActionType,\n  deepClone,\n  createHandlingStack,\n  sanitizeUser,\n  checkUser,\n  noop,\n  assign,\n  canUseEventBridge,\n  monitor,\n  extend2Lev,\n  createStoredContextManager\n} from '@cloudcare/browser-core'\nimport { validateAndBuildRumConfiguration } from '../domain/configuration'\nimport { buildCommonContext } from '../domain/contexts/commonContext'\nvar RUM_STORAGE_KEY = 'rum'\nexport function makeRumPublicApi(startRumImpl, recorderApi) {\n  var isAlreadyInitialized = false\n\n  var globalContextManager = createContextManager(\n    CustomerDataType.GlobalContext\n  )\n  var userContextManager = createContextManager(CustomerDataType.User)\n\n  var getInternalContextStrategy = function () {\n    return undefined\n  }\n  var getInitConfigurationStrategy = function () {\n    return undefined\n  }\n  var stopSessionStrategy = function () {\n    return noop()\n  }\n  var bufferApiCalls = new BoundedBuffer()\n  var addTimingStrategy = function (name, time) {\n    if (typeof time === 'undefined') {\n      time = timeStampNow()\n    }\n    bufferApiCalls.add(function () {\n      return addTimingStrategy(name, time)\n    })\n  }\n  var startViewStrategy = function (options, startClocks) {\n    if (typeof startClocks === 'undefined') {\n      startClocks = clocksNow()\n    }\n    bufferApiCalls.add(function () {\n      return startViewStrategy(options, startClocks)\n    })\n  }\n  var addActionStrategy = function (action, commonContext) {\n    if (typeof commonContext == 'undefined') {\n      commonContext = buildCommonContext(\n        globalContextManager,\n        userContextManager,\n        recorderApi\n      )\n    }\n    bufferApiCalls.add(function () {\n      return addActionStrategy(action, commonContext)\n    })\n  }\n  var addErrorStrategy = function (providedError, commonContext) {\n    if (typeof commonContext == 'undefined') {\n      commonContext = buildCommonContext(\n        globalContextManager,\n        userContextManager,\n        recorderApi\n      )\n    }\n    bufferApiCalls.add(function () {\n      return addErrorStrategy(providedError, commonContext)\n    })\n  }\n\n  function initRum(initConfiguration) {\n    getInitConfigurationStrategy = function () {\n      return deepClone(initConfiguration)\n    }\n    var eventBridgeAvailable = canUseEventBridge()\n    if (eventBridgeAvailable) {\n      initConfiguration = overrideInitConfigurationForBridge(initConfiguration)\n    }\n    if (!canHandleSession(initConfiguration)) {\n      return\n    }\n\n    if (!canInitRum(initConfiguration)) {\n      return\n    }\n\n    var configuration = validateAndBuildRumConfiguration(initConfiguration)\n    if (!configuration) {\n      return\n    }\n\n    if (!configuration.trackViewsManually) {\n      doStartRum(configuration)\n    } else {\n      // drain beforeInitCalls by buffering them until we start RUM\n      // if we get a startView, drain re-buffered calls before continuing to drain beforeInitCalls\n      // in order to ensure that calls are processed in order\n      var beforeInitCalls = bufferApiCalls\n      bufferApiCalls = new BoundedBuffer()\n\n      startViewStrategy = function (options) {\n        doStartRum(configuration, options)\n      }\n      beforeInitCalls.drain()\n    }\n\n    isAlreadyInitialized = true\n  }\n  function doStartRum(configuration, initialViewOptions) {\n    if (configuration.storeContextsToLocal) {\n      // localstorage\n      var beforeInitGlobalContext = globalContextManager.getContext()\n      globalContextManager = createStoredContextManager(\n        RUM_STORAGE_KEY,\n        CustomerDataType.GlobalContext\n      )\n      globalContextManager.setContext(\n        extend2Lev(globalContextManager.getContext(), beforeInitGlobalContext)\n      )\n\n      var beforeInitUserContext = userContextManager.getContext()\n      userContextManager = createStoredContextManager(\n        RUM_STORAGE_KEY,\n        CustomerDataType.User\n      )\n      userContextManager.setContext(\n        extend2Lev(userContextManager.getContext(), beforeInitUserContext)\n      )\n    }\n    var startRumResults = startRumImpl(\n      configuration,\n      recorderApi,\n      globalContextManager,\n      userContextManager,\n      initialViewOptions\n    )\n    startViewStrategy = startRumResults.startView\n    addActionStrategy = startRumResults.addAction\n    addErrorStrategy = startRumResults.addError\n    addTimingStrategy = startRumResults.addTiming\n    getInternalContextStrategy = startRumResults.getInternalContext\n    stopSessionStrategy = startRumResults.stopSession\n    bufferApiCalls.drain()\n    recorderApi.onRumStart(\n      startRumResults.lifeCycle,\n      configuration,\n      startRumResults.session,\n      startRumResults.viewContexts\n    )\n  }\n  var startView = monitor(function (options) {\n    var sanitizedOptions =\n      typeof options === 'object' ? options : { name: options }\n    startViewStrategy(sanitizedOptions)\n  })\n  var rumPublicApi = makePublicApi({\n    init: monitor(initRum),\n    /** @deprecated: use setGlobalContextProperty instead */\n    addRumGlobalContext: monitor(function (key, value) {\n      return globalContextManager.add(key, value)\n    }),\n    setGlobalContextProperty: monitor(function (key, value) {\n      return globalContextManager.setContextProperty(key, value)\n    }),\n\n    /** @deprecated: use removeGlobalContextProperty instead */\n    removeRumGlobalContext: monitor(function (key) {\n      return globalContextManager.remove(key)\n    }),\n    removeGlobalContextProperty: monitor(function (key) {\n      return globalContextManager.removeContextProperty(key)\n    }),\n\n    /** @deprecated: use getGlobalContext instead */\n    getRumGlobalContext: monitor(function () {\n      return globalContextManager.get()\n    }),\n    getGlobalContext: monitor(function () {\n      return globalContextManager.getContext()\n    }),\n\n    /** @deprecated: use setGlobalContext instead */\n    setRumGlobalContext: monitor(function (context) {\n      return globalContextManager.set(context)\n    }),\n    setGlobalContext: monitor(function (context) {\n      return globalContextManager.setContext(context)\n    }),\n\n    clearGlobalContext: monitor(function () {\n      return globalContextManager.clearContext()\n    }),\n\n    getInitConfiguration: monitor(function () {\n      return getInitConfigurationStrategy()\n    }),\n    getInternalContext: monitor(function (startTime) {\n      return getInternalContextStrategy(startTime)\n    }),\n    addDebugSession: monitor(function (id) {}),\n    clearDebugSession: monitor(function () {}),\n    getDebugSession: monitor(function () {}),\n    addAction: monitor(function (name, context) {\n      addActionStrategy({\n        name: name,\n        context: deepClone(context),\n        startClocks: clocksNow(),\n        type: ActionType.CUSTOM\n      })\n    }),\n    addError: monitor(function (error, context) {\n      var handlingStack = createHandlingStack()\n      addErrorStrategy({\n        error: error,\n        handlingStack: handlingStack,\n        context: deepClone(context),\n        startClocks: clocksNow()\n      })\n    }),\n    addTiming: monitor(function (name, time) {\n      addTimingStrategy(name, time)\n    }),\n    setUser: monitor(function (newUser) {\n      if (checkUser(newUser)) {\n        userContextManager.setContext(sanitizeUser(newUser))\n      }\n    }),\n    getUser: monitor(function () {\n      return userContextManager.getContext()\n    }),\n    setUserProperty: monitor(function (key, property) {\n      var newUser = {}\n      newUser[key] = property\n      var sanitizedProperty = sanitizeUser(newUser)[key]\n      userContextManager.setContextProperty(key, sanitizedProperty)\n    }),\n    removeUserProperty: monitor(function (key) {\n      return userContextManager.removeContextProperty(key)\n    }),\n\n    /** @deprecated: renamed to clearUser */\n    removeUser: monitor(function () {\n      return userContextManager.clearContext()\n    }),\n    clearUser: monitor(function () {\n      return userContextManager.clearContext()\n    }),\n    startView: startView,\n    stopSession: monitor(function () {\n      stopSessionStrategy()\n    }),\n    startSessionReplayRecording: monitor(recorderApi.start),\n    stopSessionReplayRecording: monitor(recorderApi.stop)\n  })\n  return rumPublicApi\n  function canHandleSession(initConfiguration) {\n    if (!areCookiesAuthorized(buildCookieOptions(initConfiguration))) {\n      display.warn('Cookies are not authorized, we will not send any data.')\n      return false\n    }\n\n    if (isLocalFile()) {\n      display.error('Execution is not allowed in the current context.')\n      return false\n    }\n    return true\n  }\n  function canInitRum(initConfiguration) {\n    if (isAlreadyInitialized) {\n      if (!initConfiguration.silentMultipleInit) {\n        display.error('DATAFLUX_RUM is already initialized.')\n      }\n      return false\n    }\n    return true\n  }\n  function isLocalFile() {\n    return window.location.protocol === 'file:'\n  }\n  function overrideInitConfigurationForBridge(initConfiguration) {\n    return assign({}, initConfiguration, {\n      applicationId: '00000000-aaaa-0000-aaaa-000000000000',\n      sessionSampleRate: 100\n    })\n  }\n}\n"],"mappings":"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","ignoreList":[]}