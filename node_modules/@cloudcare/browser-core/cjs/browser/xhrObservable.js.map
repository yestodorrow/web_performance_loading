{"version":3,"file":"xhrObservable.js","names":["_instrumentMethod","require","_observable","_urlPolyfill","_tools","_addEventListener","xhrObservable","xhrContexts","DATA_FLUX_REQUEST_ID_KEY","initXhrObservable","createXhrObservable","Observable","observable","openInstrumentMethod","instrumentMethodAndCallOriginal","XMLHttpRequest","prototype","before","openXhr","sendInstrumentMethod","sendXhr","call","abortInstrumentMethod","abortXhr","stop","method","url","requestUUID","UUID","state","String","toUpperCase","normalizeUrl","context","startContext","startTime","relativeNow","startClocks","clocksNow","isAborted","xhr","hasBeenReported","stopInstrumentingOnReadyStateChange","readyState","DONE","onEnd","unsubscribeLoadEndListener","completeContext","duration","elapsed","timeStamp","timeStampNow","status","notify","shallowClone","clearRequestId","addEventListener"],"sources":["../../src/browser/xhrObservable.js"],"sourcesContent":["import { instrumentMethodAndCallOriginal } from '../helper/instrumentMethod'\nimport { Observable } from '../helper/observable'\nimport { normalizeUrl } from '../helper/urlPolyfill'\nimport {\n  shallowClone,\n  elapsed,\n  relativeNow,\n  clocksNow,\n  timeStampNow,\n  UUID\n} from '../helper/tools'\nimport { addEventListener } from '../browser/addEventListener'\nvar xhrObservable\nvar xhrContexts = {}\nvar DATA_FLUX_REQUEST_ID_KEY = '_DATAFLUX_REQUEST_UUID'\nexport function initXhrObservable() {\n  if (!xhrObservable) {\n    xhrObservable = createXhrObservable()\n  }\n  return xhrObservable\n}\n\nfunction createXhrObservable() {\n  return new Observable(function (observable) {\n    var openInstrumentMethod = instrumentMethodAndCallOriginal(\n      XMLHttpRequest.prototype,\n      'open',\n      {\n        before: openXhr\n      }\n    )\n\n    var sendInstrumentMethod = instrumentMethodAndCallOriginal(\n      XMLHttpRequest.prototype,\n      'send',\n      {\n        before: function () {\n          sendXhr.call(this, observable)\n        }\n      }\n    )\n\n    var abortInstrumentMethod = instrumentMethodAndCallOriginal(\n      XMLHttpRequest.prototype,\n      'abort',\n      {\n        before: abortXhr\n      }\n    )\n\n    return function () {\n      openInstrumentMethod.stop()\n      sendInstrumentMethod.stop()\n      abortInstrumentMethod.stop()\n    }\n  })\n}\n\nfunction openXhr(method, url) {\n  var requestUUID = this[DATA_FLUX_REQUEST_ID_KEY] || UUID()\n  this[DATA_FLUX_REQUEST_ID_KEY] = requestUUID\n  xhrContexts[requestUUID] = {\n    state: 'open',\n    method: String(method).toUpperCase(),\n    url: normalizeUrl(String(url))\n  }\n}\n\nfunction sendXhr(observable) {\n  var context = xhrContexts[this[DATA_FLUX_REQUEST_ID_KEY]]\n  if (!context) {\n    return\n  }\n  var startContext = context\n  startContext.state = 'start'\n  startContext.startTime = relativeNow()\n  startContext.startClocks = clocksNow()\n  startContext.isAborted = false\n  startContext.xhr = this\n  var hasBeenReported = false\n  var stopInstrumentingOnReadyStateChange = instrumentMethodAndCallOriginal(\n    this,\n    'onreadystatechange',\n    {\n      before: function () {\n        if (this.readyState === XMLHttpRequest.DONE) {\n          // Try to report the XHR as soon as possible, because the XHR may be mutated by the\n          // application during a future event. For example, Angular is calling .abort() on\n          // completed requests during a onreadystatechange event, so the status becomes '0'\n          // before the request is collected.\n          onEnd.call(this)\n        }\n      }\n    }\n  ).stop\n\n  var onEnd = function () {\n    unsubscribeLoadEndListener()\n    stopInstrumentingOnReadyStateChange()\n    if (hasBeenReported) {\n      return\n    }\n    hasBeenReported = true\n    var completeContext = context\n    completeContext.state = 'complete'\n    completeContext.duration = elapsed(\n      startContext.startClocks.timeStamp,\n      timeStampNow()\n    )\n    completeContext.status = this.status\n    observable.notify(shallowClone(completeContext))\n    clearRequestId.call(this)\n  }\n  var unsubscribeLoadEndListener = addEventListener(this, 'loadend', onEnd).stop\n  observable.notify(startContext)\n}\nfunction clearRequestId() {\n  delete xhrContexts[this[DATA_FLUX_REQUEST_ID_KEY]]\n  delete this[DATA_FLUX_REQUEST_ID_KEY]\n}\nfunction abortXhr() {\n  var context = xhrContexts[this[DATA_FLUX_REQUEST_ID_KEY]]\n  if (context) {\n    context.isAborted = true\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,MAAA,GAAAH,OAAA;AAQA,IAAAI,iBAAA,GAAAJ,OAAA;AACA,IAAIK,aAAa;AACjB,IAAIC,WAAW,GAAG,CAAC,CAAC;AACpB,IAAIC,wBAAwB,GAAG,wBAAwB;AAChD,SAASC,iBAAiBA,CAAA,EAAG;EAClC,IAAI,CAACH,aAAa,EAAE;IAClBA,aAAa,GAAGI,mBAAmB,CAAC,CAAC;EACvC;EACA,OAAOJ,aAAa;AACtB;AAEA,SAASI,mBAAmBA,CAAA,EAAG;EAC7B,OAAO,IAAIC,sBAAU,CAAC,UAAUC,UAAU,EAAE;IAC1C,IAAIC,oBAAoB,GAAG,IAAAC,iDAA+B,EACxDC,cAAc,CAACC,SAAS,EACxB,MAAM,EACN;MACEC,MAAM,EAAEC;IACV,CACF,CAAC;IAED,IAAIC,oBAAoB,GAAG,IAAAL,iDAA+B,EACxDC,cAAc,CAACC,SAAS,EACxB,MAAM,EACN;MACEC,MAAM,EAAE,SAAAA,OAAA,EAAY;QAClBG,OAAO,CAACC,IAAI,CAAC,IAAI,EAAET,UAAU,CAAC;MAChC;IACF,CACF,CAAC;IAED,IAAIU,qBAAqB,GAAG,IAAAR,iDAA+B,EACzDC,cAAc,CAACC,SAAS,EACxB,OAAO,EACP;MACEC,MAAM,EAAEM;IACV,CACF,CAAC;IAED,OAAO,YAAY;MACjBV,oBAAoB,CAACW,IAAI,CAAC,CAAC;MAC3BL,oBAAoB,CAACK,IAAI,CAAC,CAAC;MAC3BF,qBAAqB,CAACE,IAAI,CAAC,CAAC;IAC9B,CAAC;EACH,CAAC,CAAC;AACJ;AAEA,SAASN,OAAOA,CAACO,MAAM,EAAEC,GAAG,EAAE;EAC5B,IAAIC,WAAW,GAAG,IAAI,CAACnB,wBAAwB,CAAC,IAAI,IAAAoB,WAAI,EAAC,CAAC;EAC1D,IAAI,CAACpB,wBAAwB,CAAC,GAAGmB,WAAW;EAC5CpB,WAAW,CAACoB,WAAW,CAAC,GAAG;IACzBE,KAAK,EAAE,MAAM;IACbJ,MAAM,EAAEK,MAAM,CAACL,MAAM,CAAC,CAACM,WAAW,CAAC,CAAC;IACpCL,GAAG,EAAE,IAAAM,yBAAY,EAACF,MAAM,CAACJ,GAAG,CAAC;EAC/B,CAAC;AACH;AAEA,SAASN,OAAOA,CAACR,UAAU,EAAE;EAC3B,IAAIqB,OAAO,GAAG1B,WAAW,CAAC,IAAI,CAACC,wBAAwB,CAAC,CAAC;EACzD,IAAI,CAACyB,OAAO,EAAE;IACZ;EACF;EACA,IAAIC,YAAY,GAAGD,OAAO;EAC1BC,YAAY,CAACL,KAAK,GAAG,OAAO;EAC5BK,YAAY,CAACC,SAAS,GAAG,IAAAC,kBAAW,EAAC,CAAC;EACtCF,YAAY,CAACG,WAAW,GAAG,IAAAC,gBAAS,EAAC,CAAC;EACtCJ,YAAY,CAACK,SAAS,GAAG,KAAK;EAC9BL,YAAY,CAACM,GAAG,GAAG,IAAI;EACvB,IAAIC,eAAe,GAAG,KAAK;EAC3B,IAAIC,mCAAmC,GAAG,IAAA5B,iDAA+B,EACvE,IAAI,EACJ,oBAAoB,EACpB;IACEG,MAAM,EAAE,SAAAA,OAAA,EAAY;MAClB,IAAI,IAAI,CAAC0B,UAAU,KAAK5B,cAAc,CAAC6B,IAAI,EAAE;QAC3C;QACA;QACA;QACA;QACAC,KAAK,CAACxB,IAAI,CAAC,IAAI,CAAC;MAClB;IACF;EACF,CACF,CAAC,CAACG,IAAI;EAEN,IAAIqB,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAe;IACtBC,0BAA0B,CAAC,CAAC;IAC5BJ,mCAAmC,CAAC,CAAC;IACrC,IAAID,eAAe,EAAE;MACnB;IACF;IACAA,eAAe,GAAG,IAAI;IACtB,IAAIM,eAAe,GAAGd,OAAO;IAC7Bc,eAAe,CAAClB,KAAK,GAAG,UAAU;IAClCkB,eAAe,CAACC,QAAQ,GAAG,IAAAC,cAAO,EAChCf,YAAY,CAACG,WAAW,CAACa,SAAS,EAClC,IAAAC,mBAAY,EAAC,CACf,CAAC;IACDJ,eAAe,CAACK,MAAM,GAAG,IAAI,CAACA,MAAM;IACpCxC,UAAU,CAACyC,MAAM,CAAC,IAAAC,mBAAY,EAACP,eAAe,CAAC,CAAC;IAChDQ,cAAc,CAAClC,IAAI,CAAC,IAAI,CAAC;EAC3B,CAAC;EACD,IAAIyB,0BAA0B,GAAG,IAAAU,kCAAgB,EAAC,IAAI,EAAE,SAAS,EAAEX,KAAK,CAAC,CAACrB,IAAI;EAC9EZ,UAAU,CAACyC,MAAM,CAACnB,YAAY,CAAC;AACjC;AACA,SAASqB,cAAcA,CAAA,EAAG;EACxB,OAAOhD,WAAW,CAAC,IAAI,CAACC,wBAAwB,CAAC,CAAC;EAClD,OAAO,IAAI,CAACA,wBAAwB,CAAC;AACvC;AACA,SAASe,QAAQA,CAAA,EAAG;EAClB,IAAIU,OAAO,GAAG1B,WAAW,CAAC,IAAI,CAACC,wBAAwB,CAAC,CAAC;EACzD,IAAIyB,OAAO,EAAE;IACXA,OAAO,CAACM,SAAS,GAAG,IAAI;EAC1B;AACF","ignoreList":[]}