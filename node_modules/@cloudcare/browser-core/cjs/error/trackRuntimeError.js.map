{"version":3,"file":"trackRuntimeError.js","names":["_errorTools","require","_tools","_enums","_tracekit","trackRuntimeError","errorObservable","startUnhandledErrorCollection","stackTrace","originalError","notify","computeRawError","startClocks","clocksNow","nonErrorPrefix","NonErrorPrefix","UNCAUGHT","source","ErrorSource","SOURCE","handling","ErrorHandling","UNHANDLED"],"sources":["../../src/error/trackRuntimeError.js"],"sourcesContent":["import { ErrorSource, computeRawError } from '../helper/errorTools'\nimport { clocksNow } from '../helper/tools'\nimport { ErrorHandling, NonErrorPrefix } from '../helper/enums'\nimport { startUnhandledErrorCollection } from '../tracekit'\n\nexport function trackRuntimeError(errorObservable) {\n  return startUnhandledErrorCollection(function (stackTrace, originalError) {\n    errorObservable.notify(\n      computeRawError({\n        stackTrace: stackTrace,\n        originalError: originalError,\n        startClocks: clocksNow(),\n        nonErrorPrefix: NonErrorPrefix.UNCAUGHT,\n        source: ErrorSource.SOURCE,\n        handling: ErrorHandling.UNHANDLED\n      })\n    )\n  })\n}\n"],"mappings":";;;;;;AAAA,IAAAA,WAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AACA,IAAAG,SAAA,GAAAH,OAAA;AAEO,SAASI,iBAAiBA,CAACC,eAAe,EAAE;EACjD,OAAO,IAAAC,uCAA6B,EAAC,UAAUC,UAAU,EAAEC,aAAa,EAAE;IACxEH,eAAe,CAACI,MAAM,CACpB,IAAAC,2BAAe,EAAC;MACdH,UAAU,EAAEA,UAAU;MACtBC,aAAa,EAAEA,aAAa;MAC5BG,WAAW,EAAE,IAAAC,gBAAS,EAAC,CAAC;MACxBC,cAAc,EAAEC,qBAAc,CAACC,QAAQ;MACvCC,MAAM,EAAEC,uBAAW,CAACC,MAAM;MAC1BC,QAAQ,EAAEC,oBAAa,CAACC;IAC1B,CAAC,CACH,CAAC;EACH,CAAC,CAAC;AACJ","ignoreList":[]}