"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.escapeFieldValueStr = escapeFieldValueStr;
exports.escapeJsonValue = escapeJsonValue;
exports.escapeRowData = escapeRowData;
exports.escapeRowField = escapeRowField;
var _jsonStringify = require("./jsonStringify");
var _tools = require("../tools");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function escapeRowData(str) {
  if (_typeof(str) === 'object' && str) {
    str = (0, _jsonStringify.jsonStringify)(str);
  } else if (!(0, _tools.isString)(str)) {
    return str;
  }
  var reg = /[\s=,"]/g;
  return String(str).replace(reg, function (word) {
    return '\\' + word;
  });
}
function escapeJsonValue(value, isTag) {
  if (_typeof(value) === 'object' && value) {
    value = (0, _jsonStringify.jsonStringify)(value);
  } else if (isTag) {
    // tag  json  只能是字符串
    value = '' + value;
  }
  return value;
}
function escapeFieldValueStr(str) {
  return '"' + str.replace(/\\/g, '\\\\').replace(/"/g, '\\"') + '"';
}
function escapeRowField(value) {
  if (_typeof(value) === 'object' && value) {
    return escapeFieldValueStr((0, _jsonStringify.jsonStringify)(value));
  } else if ((0, _tools.isString)(value)) {
    return escapeFieldValueStr(value);
  } else {
    return value;
  }
}
//# sourceMappingURL=rowData.js.map