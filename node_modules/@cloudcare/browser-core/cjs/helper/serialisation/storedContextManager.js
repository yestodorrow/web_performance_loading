"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buildStorageKey = buildStorageKey;
exports.createStoredContextManager = createStoredContextManager;
exports.removeStorageListeners = removeStorageListeners;
var _byteUtils = require("../byteUtils");
var _enums = require("../enums");
var _tools = require("../tools");
var _addEventListener = require("../../browser/addEventListener");
var _contextManager = require("./contextManager");
var CONTEXT_STORE_KEY_PREFIX = '_gc_s';
var storageListeners = [];
function createStoredContextManager(productKey, customerDataType, computeBytesCountImpl) {
  if (computeBytesCountImpl === undefined) {
    computeBytesCountImpl = _byteUtils.computeBytesCount;
  }
  var storageKey = buildStorageKey(productKey, customerDataType);
  var contextManager = (0, _contextManager.createContextManager)(customerDataType, computeBytesCountImpl);
  synchronizeWithStorage();
  storageListeners.push((0, _addEventListener.addEventListener)(window, _enums.DOM_EVENT.STORAGE, function (params) {
    if (storageKey === params.key) {
      synchronizeWithStorage();
    }
  }));
  contextManager.changeObservable.subscribe(dumpToStorage);
  function synchronizeWithStorage() {
    var rawContext = localStorage.getItem(storageKey);
    var context = rawContext !== null ? JSON.parse(rawContext) : {};
    contextManager.setContext(context);
  }
  function dumpToStorage() {
    localStorage.setItem(storageKey, JSON.stringify(contextManager.getContext()));
  }
  return contextManager;
}
function buildStorageKey(productKey, customerDataType) {
  return CONTEXT_STORE_KEY_PREFIX + '_' + productKey + '_' + customerDataType;
}
function removeStorageListeners() {
  (0, _tools.map)(storageListeners, function (listener) {
    listener.stop();
  });
}
//# sourceMappingURL=storedContextManager.js.map