"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CustomerDataType = exports.CUSTOMER_DATA_BYTES_LIMIT = void 0;
exports.warnIfCustomerDataLimitReached = warnIfCustomerDataLimitReached;
var _byteUtils = require("../byteUtils");
var _display = require("../display");
// RUM and logs batch bytes limit is 16KB
// ensure that we leave room for other event attributes and maintain a decent amount of event per batch
// (3KB (customer data) + 1KB (other attributes)) * 4 (events per batch) = 16KB
var CUSTOMER_DATA_BYTES_LIMIT = 3 * _byteUtils.ONE_KIBI_BYTE;
exports.CUSTOMER_DATA_BYTES_LIMIT = CUSTOMER_DATA_BYTES_LIMIT;
var CustomerDataType = {
  FeatureFlag: 'feature flag evaluation',
  User: 'user',
  GlobalContext: 'global context',
  LoggerContext: 'logger context'
};
exports.CustomerDataType = CustomerDataType;
function warnIfCustomerDataLimitReached(bytesCount, customerDataType) {
  if (bytesCount > CUSTOMER_DATA_BYTES_LIMIT) {
    _display.display.warn('The ' + customerDataType + 'data is over ' + CUSTOMER_DATA_BYTES_LIMIT / _byteUtils.ONE_KIBI_BYTE + " KiB. On low connectivity, the SDK has the potential to exhaust the user's upload bandwidth.");
    return true;
  }
  return false;
}
//# sourceMappingURL=heavyCustomerDataWarning.js.map