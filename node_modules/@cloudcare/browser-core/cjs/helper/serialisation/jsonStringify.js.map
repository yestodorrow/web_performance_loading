{"version":3,"file":"jsonStringify.js","names":["_tools","require","_typeof","obj","Symbol","iterator","constructor","prototype","jsonStringify","value","replacer","space","JSON","stringify","restoreObjectPrototypeToJson","detachToJsonMethod","Object","restoreArrayPrototypeToJson","Array","restoreValuePrototypeToJson","getPrototypeOf","restoreValueToJson","_unused","object","objectToJson","toJSON","noop"],"sources":["../../../src/helper/serialisation/jsonStringify.js"],"sourcesContent":["import { noop } from '../tools'\n\n/**\n * Custom implementation of JSON.stringify that ignores some toJSON methods. We need to do that\n * because some sites badly override toJSON on certain objects. Removing all toJSON methods from\n * nested values would be too costly, so we just detach them from the root value, and native classes\n * used to build JSON values (Array and Object).\n *\n * Note: this still assumes that JSON.stringify is correct.\n */\nexport function jsonStringify(value, replacer, space) {\n  if (typeof value !== 'object' || value === null) {\n    return JSON.stringify(value)\n  }\n\n  // Note: The order matter here. We need to detach toJSON methods on parent classes before their\n  // subclasses.\n  var restoreObjectPrototypeToJson = detachToJsonMethod(Object.prototype)\n  var restoreArrayPrototypeToJson = detachToJsonMethod(Array.prototype)\n  var restoreValuePrototypeToJson = detachToJsonMethod(\n    Object.getPrototypeOf(value)\n  )\n  var restoreValueToJson = detachToJsonMethod(value)\n\n  try {\n    return JSON.stringify(value, replacer, space)\n  } catch {\n    return '<error: unable to serialize object>'\n  } finally {\n    restoreObjectPrototypeToJson()\n    restoreArrayPrototypeToJson()\n    restoreValuePrototypeToJson()\n    restoreValueToJson()\n  }\n}\n\nexport function detachToJsonMethod(value) {\n  const object = value\n  const objectToJson = object.toJSON\n  if (objectToJson) {\n    delete object.toJSON\n    return () => {\n      object.toJSON = objectToJson\n    }\n  }\n  return noop\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAA+B,SAAAC,QAAAC,GAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,GAAA,kBAAAA,GAAA,gBAAAA,GAAA,WAAAA,GAAA,yBAAAC,MAAA,IAAAD,GAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,GAAA,KAAAC,MAAA,CAAAG,SAAA,qBAAAJ,GAAA,KAAAD,OAAA,CAAAC,GAAA;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASK,aAAaA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,KAAK,EAAE;EACpD,IAAIT,OAAA,CAAOO,KAAK,MAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE;IAC/C,OAAOG,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC;EAC9B;;EAEA;EACA;EACA,IAAIK,4BAA4B,GAAGC,kBAAkB,CAACC,MAAM,CAACT,SAAS,CAAC;EACvE,IAAIU,2BAA2B,GAAGF,kBAAkB,CAACG,KAAK,CAACX,SAAS,CAAC;EACrE,IAAIY,2BAA2B,GAAGJ,kBAAkB,CAClDC,MAAM,CAACI,cAAc,CAACX,KAAK,CAC7B,CAAC;EACD,IAAIY,kBAAkB,GAAGN,kBAAkB,CAACN,KAAK,CAAC;EAElD,IAAI;IACF,OAAOG,IAAI,CAACC,SAAS,CAACJ,KAAK,EAAEC,QAAQ,EAAEC,KAAK,CAAC;EAC/C,CAAC,CAAC,OAAAW,OAAA,EAAM;IACN,OAAO,qCAAqC;EAC9C,CAAC,SAAS;IACRR,4BAA4B,CAAC,CAAC;IAC9BG,2BAA2B,CAAC,CAAC;IAC7BE,2BAA2B,CAAC,CAAC;IAC7BE,kBAAkB,CAAC,CAAC;EACtB;AACF;AAEO,SAASN,kBAAkBA,CAACN,KAAK,EAAE;EACxC,IAAMc,MAAM,GAAGd,KAAK;EACpB,IAAMe,YAAY,GAAGD,MAAM,CAACE,MAAM;EAClC,IAAID,YAAY,EAAE;IAChB,OAAOD,MAAM,CAACE,MAAM;IACpB,OAAO,YAAM;MACXF,MAAM,CAACE,MAAM,GAAGD,YAAY;IAC9B,CAAC;EACH;EACA,OAAOE,WAAI;AACb","ignoreList":[]}