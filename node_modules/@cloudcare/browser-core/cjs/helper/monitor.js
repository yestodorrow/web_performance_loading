"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.callMonitored = callMonitored;
exports.displayIfDebugEnabled = displayIfDebugEnabled;
exports.monitor = monitor;
exports.resetMonitor = resetMonitor;
exports.setDebugMode = setDebugMode;
exports.startMonitorErrorCollection = startMonitorErrorCollection;
var _display = require("./display");
var onMonitorErrorCollected;
var debugMode = false;
function startMonitorErrorCollection(newOnMonitorErrorCollected) {
  onMonitorErrorCollected = newOnMonitorErrorCollected;
}
function setDebugMode(newDebugMode) {
  debugMode = newDebugMode;
}
function resetMonitor() {
  onMonitorErrorCollected = undefined;
  debugMode = false;
}
function monitor(fn) {
  return function () {
    return callMonitored(fn, this, arguments);
  };
}
function callMonitored(fn, context, args) {
  try {
    return fn.apply(context, args);
  } catch (e) {
    displayIfDebugEnabled(_display.ConsoleApiName.error, e);
    if (onMonitorErrorCollected) {
      try {
        onMonitorErrorCollected(e);
      } catch (e) {
        displayIfDebugEnabled(_display.ConsoleApiName.error, e);
      }
    }
  }
}
function displayIfDebugEnabled(api) {
  var args = [].slice.call(arguments, 1);
  //   display.apply(null, [api, '[MONITOR]'].concat(args))
  if (debugMode) {
    _display.display.apply(null, [api, '[MONITOR]'].concat(args));
  }
}
//# sourceMappingURL=monitor.js.map