{"version":3,"file":"getZoneJsOriginalValue.js","names":["getZoneJsOriginalValue","target","name","browserWindow","window","original","Zone","__symbol__"],"sources":["../../src/helper/getZoneJsOriginalValue.js"],"sourcesContent":["/**\n * Gets the original value for a DOM API that was potentially patched by Zone.js.\n *\n * Zone.js[1] is a library that patches a bunch of JS and DOM APIs. It usually stores the original\n * value of the patched functions/constructors/methods in a hidden property prefixed by\n * __zone_symbol__.\n *\n * In multiple occasions, we observed that Zone.js is the culprit of important issues leading to\n * browser resource exhaustion (memory leak, high CPU usage). This method is used as a workaround to\n * use the original DOM API instead of the one patched by Zone.js.\n *\n * [1]: https://github.com/angular/angular/tree/main/packages/zone.js\n */\nexport function getZoneJsOriginalValue(target, name) {\n  var browserWindow = window\n  var original\n  if (\n    browserWindow.Zone &&\n    typeof browserWindow.Zone.__symbol__ === 'function'\n  ) {\n    original = target[browserWindow.Zone.__symbol__(name)]\n  }\n  if (!original) {\n    original = target[name]\n  }\n  return original\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,sBAAsBA,CAACC,MAAM,EAAEC,IAAI,EAAE;EACnD,IAAIC,aAAa,GAAGC,MAAM;EAC1B,IAAIC,QAAQ;EACZ,IACEF,aAAa,CAACG,IAAI,IAClB,OAAOH,aAAa,CAACG,IAAI,CAACC,UAAU,KAAK,UAAU,EACnD;IACAF,QAAQ,GAAGJ,MAAM,CAACE,aAAa,CAACG,IAAI,CAACC,UAAU,CAACL,IAAI,CAAC,CAAC;EACxD;EACA,IAAI,CAACG,QAAQ,EAAE;IACbA,QAAQ,GAAGJ,MAAM,CAACC,IAAI,CAAC;EACzB;EACA,OAAOG,QAAQ;AACjB","ignoreList":[]}