{"version":3,"file":"urlPolyfill.js","names":["getLinkElementOrigin","getLocationOrigin","normalizeUrl","url","buildUrl","href","isValidUrl","e","getOrigin","getPathName","pathname","getSearch","search","getHash","hash","base","checkURLSupported","undefined","URL","test","Error","doc","document","anchorElement","createElement","implementation","createHTMLDocument","baseElement","head","appendChild","body","isURLSupported"],"sources":["../../src/helper/urlPolyfill.js"],"sourcesContent":["import { getLinkElementOrigin, getLocationOrigin } from './tools'\n\nexport function normalizeUrl(url) {\n  return buildUrl(url, getLocationOrigin()).href\n}\n\nexport function isValidUrl(url) {\n  try {\n    return !!buildUrl(url)\n  } catch (e) {\n    return false\n  }\n}\n\n// export function haveSameOrigin(url1, url2) {\n//   return getOrigin(url1) === getOrigin(url2)\n// }\n\nexport function getOrigin(url) {\n  return getLinkElementOrigin(buildUrl(url))\n}\n\nexport function getPathName(url) {\n  var pathname = buildUrl(url).pathname\n  return pathname[0] === '/' ? pathname : '/' + pathname\n}\n\nexport function getSearch(url) {\n  return buildUrl(url).search\n}\n\nexport function getHash(url) {\n  return buildUrl(url).hash\n}\n\nexport function buildUrl(url, base) {\n  if (checkURLSupported()) {\n    return base !== undefined ? new URL(url, base) : new URL(url)\n  }\n  if (base === undefined && !/:/.test(url)) {\n    throw new Error('Invalid URL: ' + url)\n  }\n  var doc = document\n  var anchorElement = doc.createElement('a')\n  if (base !== undefined) {\n    doc = document.implementation.createHTMLDocument('')\n    var baseElement = doc.createElement('base')\n    baseElement.href = base\n    doc.head.appendChild(baseElement)\n    doc.body.appendChild(anchorElement)\n  }\n  anchorElement.href = url\n  return anchorElement\n}\n\nvar isURLSupported\nfunction checkURLSupported() {\n  if (isURLSupported !== undefined) {\n    return isURLSupported\n  }\n  try {\n    var url = new URL('http://test/path')\n    isURLSupported = url.href === 'http://test/path'\n    return isURLSupported\n  } catch (e) {\n    isURLSupported = false\n  }\n  return isURLSupported\n}\n"],"mappings":"AAAA,SAASA,oBAAoB,EAAEC,iBAAiB,QAAQ,SAAS;AAEjE,OAAO,SAASC,YAAYA,CAACC,GAAG,EAAE;EAChC,OAAOC,QAAQ,CAACD,GAAG,EAAEF,iBAAiB,CAAC,CAAC,CAAC,CAACI,IAAI;AAChD;AAEA,OAAO,SAASC,UAAUA,CAACH,GAAG,EAAE;EAC9B,IAAI;IACF,OAAO,CAAC,CAACC,QAAQ,CAACD,GAAG,CAAC;EACxB,CAAC,CAAC,OAAOI,CAAC,EAAE;IACV,OAAO,KAAK;EACd;AACF;;AAEA;AACA;AACA;;AAEA,OAAO,SAASC,SAASA,CAACL,GAAG,EAAE;EAC7B,OAAOH,oBAAoB,CAACI,QAAQ,CAACD,GAAG,CAAC,CAAC;AAC5C;AAEA,OAAO,SAASM,WAAWA,CAACN,GAAG,EAAE;EAC/B,IAAIO,QAAQ,GAAGN,QAAQ,CAACD,GAAG,CAAC,CAACO,QAAQ;EACrC,OAAOA,QAAQ,CAAC,CAAC,CAAC,KAAK,GAAG,GAAGA,QAAQ,GAAG,GAAG,GAAGA,QAAQ;AACxD;AAEA,OAAO,SAASC,SAASA,CAACR,GAAG,EAAE;EAC7B,OAAOC,QAAQ,CAACD,GAAG,CAAC,CAACS,MAAM;AAC7B;AAEA,OAAO,SAASC,OAAOA,CAACV,GAAG,EAAE;EAC3B,OAAOC,QAAQ,CAACD,GAAG,CAAC,CAACW,IAAI;AAC3B;AAEA,OAAO,SAASV,QAAQA,CAACD,GAAG,EAAEY,IAAI,EAAE;EAClC,IAAIC,iBAAiB,CAAC,CAAC,EAAE;IACvB,OAAOD,IAAI,KAAKE,SAAS,GAAG,IAAIC,GAAG,CAACf,GAAG,EAAEY,IAAI,CAAC,GAAG,IAAIG,GAAG,CAACf,GAAG,CAAC;EAC/D;EACA,IAAIY,IAAI,KAAKE,SAAS,IAAI,CAAC,GAAG,CAACE,IAAI,CAAChB,GAAG,CAAC,EAAE;IACxC,MAAM,IAAIiB,KAAK,CAAC,eAAe,GAAGjB,GAAG,CAAC;EACxC;EACA,IAAIkB,GAAG,GAAGC,QAAQ;EAClB,IAAIC,aAAa,GAAGF,GAAG,CAACG,aAAa,CAAC,GAAG,CAAC;EAC1C,IAAIT,IAAI,KAAKE,SAAS,EAAE;IACtBI,GAAG,GAAGC,QAAQ,CAACG,cAAc,CAACC,kBAAkB,CAAC,EAAE,CAAC;IACpD,IAAIC,WAAW,GAAGN,GAAG,CAACG,aAAa,CAAC,MAAM,CAAC;IAC3CG,WAAW,CAACtB,IAAI,GAAGU,IAAI;IACvBM,GAAG,CAACO,IAAI,CAACC,WAAW,CAACF,WAAW,CAAC;IACjCN,GAAG,CAACS,IAAI,CAACD,WAAW,CAACN,aAAa,CAAC;EACrC;EACAA,aAAa,CAAClB,IAAI,GAAGF,GAAG;EACxB,OAAOoB,aAAa;AACtB;AAEA,IAAIQ,cAAc;AAClB,SAASf,iBAAiBA,CAAA,EAAG;EAC3B,IAAIe,cAAc,KAAKd,SAAS,EAAE;IAChC,OAAOc,cAAc;EACvB;EACA,IAAI;IACF,IAAI5B,GAAG,GAAG,IAAIe,GAAG,CAAC,kBAAkB,CAAC;IACrCa,cAAc,GAAG5B,GAAG,CAACE,IAAI,KAAK,kBAAkB;IAChD,OAAO0B,cAAc;EACvB,CAAC,CAAC,OAAOxB,CAAC,EAAE;IACVwB,cAAc,GAAG,KAAK;EACxB;EACA,OAAOA,cAAc;AACvB","ignoreList":[]}